<!DOCTYPE HTML>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpnzhuanxian.github.io/news/article-101242.htm" />
    <title>.NET Core Hangfire任务计划_在线工具</title>
        <meta name="description" content="安装Hangfire  新建ASP.NET Core空 项目，.Net Core版本3.1   往*.csproj添加包引用，添加新的PackageReference标记。如下所示。请注意，下面代码段" />
    
    <meta name="author" content="VPN专线 订阅机场节点中文网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpnzhuanxian.github.io/news/article-101242.htm" />
    <meta property="og:site_name" content="VPN专线 订阅机场节点中文网" />
    <meta property="og:title" content=".NET Core Hangfire任务计划_在线工具" />
    <meta property="og:image" content="https://vpnzhuanxian.github.io/uploads/20240412/e3c5e21e1625e6664453df160a14fa78.webp" />
        <meta property="og:release_date" content="2025-04-22T08:21:27" />
    <meta property="og:updated_time" content="2025-04-22T08:21:27" />
        <meta property="og:description" content="安装Hangfire  新建ASP.NET Core空 项目，.Net Core版本3.1   往*.csproj添加包引用，添加新的PackageReference标记。如下所示。请注意，下面代码段" />
        
    <link href="/assets/website/css/clashv2rayfree/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/website/css/clashv2rayfree/style.css" rel="stylesheet" type="text/css" media="all" />
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/website/img/clashv2rayfree/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/website/js/frontend/clashv2rayfree/jquery-1.11.0.min.js"></script>
    <script src="/assets/website/js/frontend/clashv2rayfree/bootstrap.min.js"></script>

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content=".NET Core Hangfire任务计划_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-DEDMWHR2YW"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-DEDMWHR2YW');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">VPN专线</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li>
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li>
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                        <li>
                                        <a href="/client.htm">客户端</a>
                                    </li>
                                                                    </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/news/">新闻资讯</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>.NET Core Hangfire任务计划_在线工具</h1>
                        </div>
                        <div class="about-bottom">
                                            <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                <div class="xcblog-blog-detail">
                      				  				  				<h2>安装Hangfire</h2> <p> 新建ASP.NET Core空 项目，.Net Core版本3.1</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/45731c43fb758a1e3cd964f5a9dc597b.jpg" alt=".NET Core Hangfire任务计划_在线工具"></p> <p> 往*.csproj添加包引用，添加新的PackageReference标记。如下所示。请注意，下面代码段中的版本可能已经过时，如有需要，请使用nuget获取最新版本。</p> <div class="cnblogs_code"> <pre>&lt;ItemGroup&gt;   &lt;PackageReference Include="Hangfire.Core" Version="1.7.28" /&gt;   &lt;PackageReference Include="Hangfire.SqlServer" Version="1.7.28" /&gt;   &lt;PackageReference Include="Hangfire.AspNetCore" Version="1.7.28" /&gt; &lt;/ItemGroup&gt;</pre> </div> <h2>创建数据库</h2> <p>从上面的代码片段中可以看到，在本文中，我们将使用SQL Server作为作业存储。在配置Hangfire之前，您需要为它创建一个数据库，或者使用现有的数据库。下面的配置字符串指向本地计算机上SQLEXPRESS实例中的HangfireTest数据库。</p> <p> </p> <p>您可以使用SQLServerManagementStudio或任何其他方式执行以下SQL命令。如果您使用的是其他数据库名称或实例，请确保在接下来的步骤中配置Hangfire时更改了连接字符串。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">CREATE DATABASE [HangfireTest] GO</span></pre> </div> <h2>配置Settings</h2> <p>下面将定义HangfireConnection连接来进行表迁移，同时AspNetCore与Hangfire进行了日志记录集成。Hangfire的日志信息有时非常重要，有助于诊断不同的问题。信息级别允许查看Hangfire的工作情况，警告和更高的日志级别有助于调查问题，建议调整日志级别</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">{   </span><span style="background-color: rgba(255, 255, 0, 1)"><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ConnectionStrings</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {     </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">HangfireConnection</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Server=.\\sqlexpress;Database=HangfireTest;Integrated Security=SSPI;</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">   }, </span></span><span style="color: rgba(128, 0, 0, 1)">  "</span><span style="color: rgba(128, 0, 0, 1)">Logging</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {     </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">LogLevel</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {       </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Default</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Warning</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,       </span><span style="background-color: rgba(255, 255, 0, 1)"><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Hangfire</span><span style="color: rgba(128, 0, 0, 1)">"</span>: <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Information</span><span style="color: rgba(128, 0, 0, 1)">"</span></span><span style="color: rgba(0, 0, 0, 1)">     }   } }</span></pre> </div> <p>更新应用程序设置后，打开Startup.cs文件。startup类是.NET CORE应用程序的配置。首先，我们需要导入Hangfire名称空间，由于建的是空项目，所以还需要导入Configuration.</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> Microsoft.Extensions.DependencyInjection;<br><span style="background-color: rgba(255, 255, 0, 1)">using Microsoft.Extensions.Configuration; </span></span><span style="color: rgba(0, 0, 255, 1); background-color: rgba(255, 255, 0, 1)">using</span><span style="background-color: rgba(255, 255, 0, 1)"> Hangfire; <span style="color: rgba(0, 0, 255, 1)">using</span> Hangfire.SqlServer;</span></pre> </div> <h3>注册服务</h3> <p>   使用asp.netcore内置DI注入Hangfire服务</p> <div class="cnblogs_code"> <p>public Startup(IConfiguration configuration)<br />  {<br />     Configuration = configuration;<br />  }</p> <p>  public IConfiguration Configuration { get; }</p> <pre>public void<span> ConfigureServices(IServiceCollection services) {     // Add Hangfire services.     services.AddHangfire(configuration =&gt;<span> configuration         .SetDataCompatibilityLevel(CompatibilityLevel.Version_170)         .UseSimpleAssemblyNameTypeSerializer()         .UseRecommendedSerializerSettings()         .UseSqlServerStorage(Configuration.GetConnectionString("HangfireConnection"), new<span> SqlServerStorageOptions         {             CommandBatchMaxTimeout = TimeSpan.FromMinutes(5<span>),             SlidingInvisibilityTimeout = TimeSpan.FromMinutes(5<span>),             QueuePollInterval =<span> TimeSpan.Zero,             UseRecommendedIsolationLevel = true<span>,             DisableGlobalLocks = true<span>         }));      // Add the processing server as IHostedService     services.AddHangfireServer();<span> }</span></span></span></span></span></span></span></span></span></pre> <p> </p> </div> <h3>添加Hangfire面板</h3> <p>   如果只是作为后台作业，也可不使用面板功能，按需添加</p> <div class="cnblogs_code"> <pre> <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> Configure(IApplicationBuilder app, IWebHostEnvironment env)  {      app.UseRouting();      app.UseEndpoints(endpoints </span>=&gt;<span style="color: rgba(0, 0, 0, 1)">      {</span></pre> <p>         endpoints.MapGet("/", async context =&gt;<br />         {<br />            await context.Response.WriteAsync("Hello World!");<br />         });</p> <p>          <span style="background-color: rgba(255, 255, 0, 1)">endpoints.MapHangfireDashboard();</span></p> <pre><span style="color: rgba(0, 0, 0, 1)">     });<br></span></pre> <pre><span>     BackgroundJob.Enqueue(() =&gt; Console.WriteLine("测试"<span>));</span></span></pre> <pre><span style="color: rgba(0, 0, 0, 1)">}</span></pre> </div> <h2>运行程序</h2> <p> 生成数据表</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/7e029dbcd63b2848aa7f49518d9dd170.jpg" alt=".NET Core Hangfire任务计划_在线工具"></p> <p> </p> <p> </p> <p>  访问http://localhost:5000/hangfire<img decoding="async" src="http://img.555519.xyz/uploads3/20220506/78fc360389c44f23e250bdde7b593129.jpg" alt=".NET Core Hangfire任务计划_在线工具"></p> <h3>添加Hangfire面板授权</h3> <p>新建MyAuthorizationFilter.cs</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> MyAuthorizationFilter : IDashboardAuthorizationFilter     {         </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">bool</span><span style="color: rgba(0, 0, 0, 1)"> Authorize(DashboardContext context)         {             </span><span style="color: rgba(0, 0, 255, 1)">var</span> httpContext =<span style="color: rgba(0, 0, 0, 1)"> context.GetHttpContext();             </span><span style="color: rgba(0, 0, 255, 1)">string</span> header = httpContext.Request.Headers[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Authorization</span><span style="color: rgba(128, 0, 0, 1)">"</span>];<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">获取授权</span>             <span style="color: rgba(0, 0, 255, 1)">if</span>(header == <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)                 </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> AuthenicateLogin();             </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">解析授权</span>             <span style="color: rgba(0, 0, 255, 1)">var</span> authHeader =<span style="color: rgba(0, 0, 0, 1)"> AuthenticationHeaderValue.Parse(header);             </span><span style="color: rgba(0, 0, 255, 1)">var</span> credentialBytes =<span style="color: rgba(0, 0, 0, 1)"> Convert.FromBase64String(authHeader.Parameter);             </span><span style="color: rgba(0, 0, 255, 1)">var</span> credentials = Encoding.UTF8.GetString(credentialBytes).Split(<span style="color: rgba(0, 0, 255, 1)">new</span>[] { <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">:</span><span style="color: rgba(128, 0, 0, 1)">'</span> }, <span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">);             </span><span style="color: rgba(0, 0, 255, 1)">var</span> username = credentials[<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">];             </span><span style="color: rgba(0, 0, 255, 1)">var</span> password = credentials[<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">];             </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">验证登录</span>             <span style="color: rgba(0, 0, 255, 1)">if</span> (username == <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">admin</span><span style="color: rgba(128, 0, 0, 1)">"</span> &amp;&amp; password ==<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">123456</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)                 </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">;             </span><span style="color: rgba(0, 0, 255, 1)">else</span>                 <span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> AuthenicateLogin();             </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">跳转简单登录界面</span>             <span style="color: rgba(0, 0, 255, 1)">bool</span><span style="color: rgba(0, 0, 0, 1)"> AuthenicateLogin()             {                 httpContext.Response.StatusCode </span>= <span style="color: rgba(128, 0, 128, 1)">401</span><span style="color: rgba(0, 0, 0, 1)">;                 httpContext.Response.Headers.Append(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">WWW-Authenticate</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Basic realm=\"Hangfire Dashboard\"</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);                 context.Response.WriteAsync(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Authenticatoin is required.</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);                 </span><span style="color: rgba(0, 0, 255, 1)">return</span> <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">;             }                      }     }</span></pre> </div> <h3>Hangfire面板修改</h3> <div class="cnblogs_code"> <pre> <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> Configure(IApplicationBuilder app, IWebHostEnvironment env)  {             </span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (env.IsDevelopment())             {                 app.UseDeveloperExceptionPage();             }              app.UseRouting();              app.UseEndpoints(endpoints </span>=&gt;<span style="color: rgba(0, 0, 0, 1)">             {</span></pre> <p>                 endpoints.MapHangfireDashboard(new DashboardOptions<br />                 {<br />                    Authorization = new[] { new MyAuthorizationFilter() }<br />                 });</p> <pre><span style="color: rgba(0, 0, 0, 1)">                endpoints.MapGet(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">/</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(0, 0, 255, 1)">async</span> context =&gt;<span style="color: rgba(0, 0, 0, 1)">                 {                     </span><span style="color: rgba(0, 0, 255, 1)">await</span> context.Response.WriteAsync(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Hello World!</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);                 });             });              BackgroundJob.Enqueue(() </span>=&gt; Console.WriteLine(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">测试</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">));    }</span></pre> </div> <h2>运行程序</h2> <div> <img decoding="async" src="https://img2022.cnblogs.com/blog/1342504/202205/1342504-20220506161729989-181205038.png" alt=".NET Core Hangfire任务计划_在线工具"></p> <p> </p> <p> <img decoding="async" src="http://img.555519.xyz/uploads3/20220506/2f0e51c2b5c42635e7bc47eaed7b86ac.jpg" alt=".NET Core Hangfire任务计划_在线工具"></p> <p> </p> <h3> 文档链接：https://docs.hangfire.io/en/latest/getting-started/index.html<br /> </h3> </div> <p> </p> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-100627.htm">宠物食品加工厂要投资多少亿元（宠物食品加工厂利润）</a></p>
                                        <p>下一个：<a href="/news/article-101243.htm">猫三联一共几针,间隔多久打（猫三联一共几针,间隔多久打一次）</a></p>
                                    </div>
                                        </div>

                        
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-77421.htm" title="附近仓鼠宠物店万州（重庆仓鼠宠物店）">附近仓鼠宠物店万州（重庆仓鼠宠物店）</a></li>
                        <li class="py-2"><a href="/news/article-71384.htm" title="SpringBoot 使用 Feign进行远程调用、文件上传等操作">SpringBoot 使用 Feign进行远程调用、文件上传等操作</a></li>
                        <li class="py-2"><a href="/news/article-81550.htm" title="初中毕业可以学兽医拿证吗（初中毕业可以学兽医拿证吗知乎）">初中毕业可以学兽医拿证吗（初中毕业可以学兽医拿证吗知乎）</a></li>
                        <li class="py-2"><a href="/news/article-83683.htm" title="动物接种疫苗的方法有几种图片（动物接种注意事项）">动物接种疫苗的方法有几种图片（动物接种注意事项）</a></li>
                        <li class="py-2"><a href="/news/article-85107.htm" title="spring和springMVC整合父子容器问题：整合Spring时Service层为什么不做全局包扫描详解">spring和springMVC整合父子容器问题：整合Spring时Service层为什么不做全局包扫描详解</a></li>
                        <li class="py-2"><a href="/news/article-84393.htm" title="宠物美容师学校（宠物美容师学校信阳）">宠物美容师学校（宠物美容师学校信阳）</a></li>
                        <li class="py-2"><a href="/news/article-95428.htm" title="动物疫苗生产企业排行（动物疫苗生产企业排行榜最新）">动物疫苗生产企业排行（动物疫苗生产企业排行榜最新）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-3-free-subscribe-node.htm" title="VPN专线 | 3月3日19M/S|免费Shadowrocket/V2ray/Clash/SSR免费节点订阅分享">VPN专线 | 3月3日19M/S|免费Shadowrocket/V2ray/Clash/SSR免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-13-free-node-subscribe.htm" title="VPN专线 | 4月13日20.4M/S|免费SSR/V2ray/Shadowrocket/Clash免费节点机场分享">VPN专线 | 4月13日20.4M/S|免费SSR/V2ray/Shadowrocket/Clash免费节点机场分享</a></li>
                        <li class="py-2"><a href="/news/article-94179.htm" title="延吉安泰动物医院电话多少（延吉安泰动物医院怎么样）">延吉安泰动物医院电话多少（延吉安泰动物医院怎么样）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">64</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                                    <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                <p>
                    VPN专线 订阅机场节点中文网 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>